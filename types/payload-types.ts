/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    categories: Category;
    posts: Post;
    tags: Tag;
    users: User;
    media: Media;
    authors: Author;
    bannerMedia: BannerMedia;
    subscribers: Subscriber;
    integrations: Integration;
  };
  globals: {
    faq: Faq;
  };
}
export interface Category {
  id: string;
  name?: string;
}
export interface Post {
  id: string;
  title: string;
  slug: string;
  author?: string | Author;
  publishedDate?: string;
  lastUpdated?: string;
  description: string;
  banner?: string | Media;
  category?: string | Category;
  tags?: string[] | Tag[];
  content: {
    [k: string]: unknown;
  }[];
  status?: 'draft' | 'published';
  updatedAt: string;
  createdAt: string;
}
export interface Author {
  id: string;
  name: string;
  shortBio?: string;
  profilePicture?: string | Media;
  updatedAt: string;
  createdAt: string;
}
export interface Media {
  id: string;
  alt?: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes?: {
    tiny?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    thumbnail?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    sixteenByNineMedium?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    sixteenByNineLarge?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
}
export interface Tag {
  id: string;
  name?: string;
}
export interface User {
  id: string;
  name: string;
  role: 'user' | 'admin';
  sub?: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password?: string;
}
export interface BannerMedia {
  id: string;
  alt?: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes?: {
    postBanner?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    postBannerSmall?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
}
export interface Subscriber {
  id: string;
  name: string;
  email: string;
  updatedAt: string;
  createdAt: string;
}
export interface Integration {
  id: string;
  name: string;
  description?: string;
  role: 'user' | 'admin';
  updatedAt: string;
  createdAt: string;
  enableAPIKey?: boolean;
  apiKey?: string;
  apiKeyIndex?: string;
}
export interface Faq {
  id: string;
  questions: {
    question: string;
    answer: string;
    id?: string;
  }[];
  updatedAt?: string;
  createdAt?: string;
}
