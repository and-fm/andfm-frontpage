---
const cmsUrl = import.meta.env.PAYLOAD_CMS_URL;
---
<section class="">
    <div class="py-8 px-4 mx-auto max-w-screen-xl lg:py-16 lg:px-6">
        <div class="mx-auto max-w-screen-md sm:text-center">
            <h2 class="mb-4 text-3xl font-extrabold tracking-tight sm:text-4xl text-white">Waiting List</h2>
            <p class="mx-auto mb-8 max-w-2xl font-light text-zinc-500 sm:text-xl dark:text-zinc-400">AND distribution is currently only available to a limited selection of artists. Sign up to be notified about our public launch!</p>
            <div class="text-white">
                <p id="subscriptionErrorText" class="mx-auto mb-4 max-w-2xl font-light text-orange-500"></p>
            </div>

            <form id="mailingListForm" action="">
                <div class="items-center mx-auto space-y-4 max-w-screen-sm sm:flex sm:space-y-0">
                    <div class="relative w-full sm:w-2/3">
                        <label for="name" class="hidden mb-2 text-sm font-medium text-and-black dark:text-zinc-300">Name</label>
                        <div class="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">
                            <svg class="w-5 h-5 text-zinc-400" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
                                <path d="M10 8a3 3 0 100-6 3 3 0 000 6zM3.465 14.493a1.23 1.23 0 00.41 1.412A9.957 9.957 0 0010 18c2.31 0 4.438-.784 6.131-2.1.43-.333.604-.903.408-1.41a7.002 7.002 0 00-13.074.003z" />
                              </svg>                                                         
                        </div>
                        <input class="block p-3 pl-10 w-full text-sm bg-white rounded-lg border border-zinc-300 sm:rounded-none sm:rounded-l-lg focus:ring-primary-500 focus:border-primary-500 dark:bg-zinc-700 dark:border-zinc-600 dark:placeholder-zinc-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Enter your name" type="text" id="name" required="true">
                    </div>
                    <div class="relative w-full">
                        <label for="email" class="hidden mb-2 text-sm font-medium text-and-black dark:text-zinc-300">Email address</label>
                        <div class="flex absolute inset-y-0 left-0 items-center pl-3 pointer-events-none">
                            <svg class="w-5 h-5 text-zinc-500 dark:text-zinc-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path><path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path></svg>
                        </div>
                        <input class="block p-3 pl-10 w-full rounded-lg text-sm bg-white border border-zinc-300 sm:rounded-none focus:ring-primary-500 focus:border-primary-500 dark:bg-zinc-700 dark:border-zinc-600 dark:placeholder-zinc-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder="Enter your email" type="email" id="email" required="true">
                    </div>
                    <div>
                        <button id="mailingListFormSubmit" type="submit" class="py-3 px-5 w-full text-sm font-medium text-center text-black rounded-lg cursor-pointer bg-gradient-to-tr from-red-300 via-orange-300 to-yellow-300 sm:rounded-none sm:rounded-r-lg ">Subscribe</button>
                    </div>
                </div>
                <!-- <div class="mx-auto max-w-screen-sm text-sm text-left text-zinc-500 newsletter-form-footer dark:text-zinc-300">We care about the protection of your data. <a href="#" class="font-medium text-primary-600 dark:text-primary-500 hover:underline">Read our Privacy Policy</a>.</div> -->
            </form>
        </div>
    </div>
</section>



<script define:vars={{cmsUrl: cmsUrl}}>
const form = document.getElementById('mailingListForm');
const formSubmitButton = document.getElementById('mailingListFormSubmit');

const errorTextElement = document.getElementById('subscriptionErrorText');

form?.addEventListener('submit', async (e) => {
    e.preventDefault();

    const data = {
        name: (document.getElementById('name'))?.value,
        email: (document.getElementById('email'))?.value,
    }

    const formData = new FormData();
    formData.append('name', data.name);
    formData.append('email', data.email);
    
    form.classList.add('hidden');
    errorTextElement.innerText = 'Please wait...';

    try {
        const response = await fetch(cmsUrl + '/api/subscribers', {
            method: 'POST',
            headers: {
                // 'Content-Type': 'application/x-www-form-urlencoded',
                // "Access-Control-Allow-Origin": "*",
            },
            body: formData
        });

        if (response.status.toString().startsWith('2')) {
            errorTextElement.innerText = 'Thank you for subscribing!';
            errorTextElement.classList.remove('text-orange-500');
        } else {
            throw new Error(response)
        }
    } catch (e) {
        form.classList.remove('hidden');
        console.log(e)
        errorTextElement.innerText = 'There was an error subscribing you. Please try again.';
    } 
});
</script>